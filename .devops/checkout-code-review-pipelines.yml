pr:
  autoCancel: true
  branches:
    include:
      - main
  paths:
    include:
      - 'src/domains/checkout-common'
      - 'src/domains/checkout-app'
    exclude:
      - '**/*.lock.hcl'
      - '**/*.md'

parameters:
  - name: 'DEV'
    displayName: 'Run on DEV environment'
    type: boolean
    default: True
    values:
      - False
      - True
  - name: 'UAT'
    displayName: 'Run on UAT environment'
    type: boolean
    default: True
    values:
      - False
      - True
  - name: 'PROD'
    displayName: 'Run on PROD environment'
    type: boolean
    default: True
    values:
      - False
      - True

variables:
  TIME_OUT: 30
  # working dir
  WORKING_DIR_APP: 'src/domains/checkout-app'
  WORKING_DIR_COMMON: 'src/domains/checkout-common'
  poolNameDev: '$(TF_POOL_NAME_DEV)'
  poolNameUat: '$(TF_POOL_NAME_UAT)'
  poolNameProd: '$(TF_POOL_NAME_PROD)'
  azureServiceConnectionPlanNameDev: '$(TF_AZURE_SERVICE_CONNECTION_PLAN_NAME_DEV)'
  azureServiceConnectionPlanNameUat: '$(TF_AZURE_SERVICE_CONNECTION_PLAN_NAME_UAT)'
  azureServiceConnectionPlanNameProd: '$(TF_AZURE_SERVICE_CONNECTION_PLAN_NAME_PROD)'
  githubEndpointName: '$(TF_GITHUB_SERVICE_ENDPOINT_NAME)'

pool:
  vmImage: 'ubuntu-latest'

resources:
  repositories:
    - repository: terraform
      type: github
      name: pagopa/azure-pipeline-templates
      ref: refs/tags/v5.2.1
      endpoint: 'io-azure-devops-github-ro'

stages:
  - stage: DEV
    dependsOn: []
    condition: and(succeeded(), eq(${{parameters.DEV}}, true))
    pool:
      name: "${{variables.poolNameDev}}"
    jobs:
      #APP
      - job: tfplan_checkout
        strategy:
          parallel: 1
        timeoutInMinutes: $[variables.TIME_OUT]
        steps:
          - checkout: self
          # 1. Install terraform
          - template: templates/terraform-setup/template.yaml@terraform
          - template: templates/terraform-summarize/template.yaml@terraform
          # 2. Run terraform plan checkout
          - template: templates/terraform-plan/template.yaml@terraform
            parameters:
              TF_ENVIRONMENT_FOLDER: "dev"
              WORKINGDIR: ${{ variables.WORKING_DIR_APP }}
              AZURE_SERVICE_CONNECTION_NAME: "${{variables.azureServiceConnectionPlanNameDev}}"
              TF_SUMMARIZE: true
      #COMMON
      - job: tfplan_checkout
        strategy:
          parallel: 1
        timeoutInMinutes: $[variables.TIME_OUT]
        steps:
          - checkout: self
          # 1. Install terraform
          - template: templates/terraform-setup/template.yaml@terraform
          - template: templates/terraform-summarize/template.yaml@terraform
          # 2. Run terraform plan checkout
          - template: templates/terraform-plan/template.yaml@terraform
            parameters:
              TF_ENVIRONMENT_FOLDER: "dev"
              WORKINGDIR: ${{ variables.WORKING_DIR_COMMON }}
              AZURE_SERVICE_CONNECTION_NAME: "${{variables.azureServiceConnectionPlanNameDev}}"
              TF_SUMMARIZE: true

  - stage: UAT
    dependsOn: []
    condition: and(succeeded(), eq(${{parameters.UAT}}, true))
    pool:
      name: "${{variables.poolNameUat}}"
    jobs:
      #APP
      - job: tfplan_checkout
        strategy:
          parallel: 1
        timeoutInMinutes: $[variables.TIME_OUT]
        steps:
          - checkout: self
          # 1. Install terraform
          - template: templates/terraform-setup/template.yaml@terraform
          - template: templates/terraform-summarize/template.yaml@terraform
          # 2. Run terraform plan checkout
          - template: templates/terraform-plan/template.yaml@terraform
            parameters:
              TF_ENVIRONMENT_FOLDER: "uat"
              WORKINGDIR: ${{ variables.WORKING_DIR_APP }}
              AZURE_SERVICE_CONNECTION_NAME: "${{variables.azureServiceConnectionPlanNameUat}}"
              TF_SUMMARIZE: true
      #COMMON
      - job: tfplan_checkout
        strategy:
          parallel: 1
        timeoutInMinutes: $[variables.TIME_OUT]
        steps:
          - checkout: self
          # 1. Install terraform
          - template: templates/terraform-setup/template.yaml@terraform
          - template: templates/terraform-summarize/template.yaml@terraform
          # 2. Run terraform plan checkout
          - template: templates/terraform-plan/template.yaml@terraform
            parameters:
              TF_ENVIRONMENT_FOLDER: "uat"
              WORKINGDIR: ${{ variables.WORKING_DIR_COMMON }}
              AZURE_SERVICE_CONNECTION_NAME: "${{variables.azureServiceConnectionPlanNameUat}}"
              TF_SUMMARIZE: true

  - stage: PROD
    dependsOn: []
    condition: and(succeeded(), eq(${{parameters.PROD}}, true))
    pool:
      name: "${{variables.poolNameProd}}"
    jobs:
      #APP
      - job: tfplan_checkout
        strategy:
          parallel: 1
        timeoutInMinutes: $[variables.TIME_OUT]
        steps:
          - checkout: self
          # 1. Install terraform
          - template: templates/terraform-setup/template.yaml@terraform
          - template: templates/terraform-summarize/template.yaml@terraform
          # 2. Run terraform plan checkout
          - template: templates/terraform-plan/template.yaml@terraform
            parameters:
              TF_ENVIRONMENT_FOLDER: "prod"
              WORKINGDIR: ${{ variables.WORKING_DIR_APP }}
              AZURE_SERVICE_CONNECTION_NAME: "${{variables.azureServiceConnectionPlanNameProd}}"
              TF_SUMMARIZE: true
      #COMMON
      - job: tfplan_checkout
        strategy:
          parallel: 1
        timeoutInMinutes: $[variables.TIME_OUT]
        steps:
          - checkout: self
          # 1. Install terraform
          - template: templates/terraform-setup/template.yaml@terraform
          - template: templates/terraform-summarize/template.yaml@terraform
          # 2. Run terraform plan checkout
          - template: templates/terraform-plan/template.yaml@terraform
            parameters:
              TF_ENVIRONMENT_FOLDER: "prod"
              WORKINGDIR: ${{ variables.WORKING_DIR_COMMON }}
              AZURE_SERVICE_CONNECTION_NAME: "${{variables.azureServiceConnectionPlanNameProd}}"
              TF_SUMMARIZE: true
