#!/bin/sh

init () {
    USERNAME=$1
    PASSWORD=$2
    SCHEMA=$3

    echo "Creating '$SCHEMA' ..."

    set -e

    PGPASSWORD="$POSTGRES_PASSWORD" psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" -d $POSTGRES_DB <<-EOSQL

    DO \$do\$
    BEGIN
       IF EXISTS (SELECT FROM pg_catalog.pg_roles WHERE  rolname = '$USERNAME') THEN
          RAISE NOTICE 'Role "$USERNAME" already exists. Skipping.';
       ELSE
          CREATE ROLE $USERNAME LOGIN PASSWORD '$PASSWORD';
          GRANT ALL PRIVILEGES ON DATABASE "nodo" TO $USERNAME;
       END IF;
    END
    \$do\$;

    CREATE SCHEMA IF NOT EXISTS $SCHEMA AUTHORIZATION $USERNAME;

EOSQL

    echo "Created '$SCHEMA'."
}


init $NODO_CFG_USERNAME $NODO_CFG_PASSWORD $NODO_CFG_SCHEMA

init $NODO_ONLINE_USERNAME $NODO_ONLINE_PASSWORD $NODO_ONLINE_SCHEMA

echo "Creating function trunc on '$NODO_ONLINE_SCHEMA' ..."
PGPASSWORD="$POSTGRES_PASSWORD" psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" -d $POSTGRES_DB <<-EOSQL
    CREATE or REPLACE FUNCTION trunc(timestamp without time zone) RETURNS date
        AS 'select DATE_TRUNC(''day'',\$1);'
        LANGUAGE SQL
        IMMUTABLE
        RETURNS NULL ON NULL INPUT;
EOSQL
echo "Created function trunc on '$NODO_ONLINE_SCHEMA'"

init $NODO_OFFLINE_USERNAME $NODO_OFFLINE_PASSWORD $NODO_OFFLINE_SCHEMA

init $NODO_WFESP_USERNAME $NODO_WFESP_PASSWORD $NODO_WFESP_SCHEMA

init $NODO_RE_USERNAME $NODO_RE_PASSWORD $NODO_RE_SCHEMA
