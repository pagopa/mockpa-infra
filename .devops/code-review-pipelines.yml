# Automatically triggered on PR
# Only triggers on branches
# trigger:
#   paths:
#     include:
#       - 'src/*'
#       - '.devops/*'
#     exclude:
#       - 'src/k8s/*'
pr:
  branches:
    include:
      - main
  paths:
    include:
      - 'src/*'
      - '.devops/*'
    exclude:
      - 'src/k8s/*'

parameters:
  - name: 'DEV'
    displayName: 'Plan on DEV environment'
    type: boolean
    default: True
    values:
      - False
      - True
  - name: 'UAT'
    displayName: 'Plan on UAT environment'
    type: boolean
    default: True
    values:
      - False
      - True
  - name: 'PROD'
    displayName: 'Plan on PROD environment'
    type: boolean
    default: True
    values:
      - False
      - True

pool:
  vmImage: 'ubuntu-20.04'

resources:
  repositories:
    - repository: terraform
      type: github
      name: pagopa/azure-pipeline-templates
      ref: refs/tags/v17
      endpoint: 'io-azure-devops-github-ro'

stages:
  - stage: install_dev
    pool:
      name: pagopa-uat-linux
    jobs:
      - job: terraform_install
        steps:
          # 1. Install terraform and terragrunt
          - template: templates/terraform-setup/template.yaml@terraform

  - stage: install_uat
    pool:
      name: pagopa-uat-linux
    jobs:
      - job: terraform_install
        steps:
          # 1. Install terraform and terragrunt
          - template: templates/terraform-setup/template.yaml@terraform

  - stage: install_prod
    pool:
      name: pagopa-uat-linux
    jobs:
      - job: terraform_install
        steps:
          # 1. Install terraform and terragrunt
          - template: templates/terraform-setup/template.yaml@terraform

  - stage: plan_dev
    dependsOn: [install_dev]
    condition: and(succeeded(), eq(${{parameters.DEV}}, true))
    pool:
      name: pagopa-uat-linux
    jobs:
      - job: terraform_plan
        steps:
          # 2. Run terragrunt plan
          - template: templates/terraform-plan/template.yaml@terraform
            parameters:
              SUBSCRIPTION: DEV-PAGOPA-SERVICE-CONN
              ENVIRONMENT: dev

  - stage: plan_uat
    dependsOn: [install_uat]
    condition: and(succeeded(), eq(${{parameters.UAT}}, true))
    pool:
      name: pagopa-uat-linux
    jobs:
      - job: terraform_plan
        steps:
          # 2. Run terragrunt plan
          - template: templates/terraform-plan/template.yaml@terraform
            parameters:
              SUBSCRIPTION: UAT-PAGOPA-SERVICE-CONN
              ENVIRONMENT: uat

  - stage: plan_prod
    dependsOn: [install_prod]
    condition: and(succeeded(), eq(${{parameters.PROD}}, true))
    pool:
      name: pagopa-uat-linux
    jobs:
      - job: terraform_plan
        steps:
          # 2. Run terragrunt plan
          - template: templates/terraform-plan/template.yaml@terraform
            parameters:
              SUBSCRIPTION: PROD-PAGOPA-SERVICE-CONN
              ENVIRONMENT: prod
