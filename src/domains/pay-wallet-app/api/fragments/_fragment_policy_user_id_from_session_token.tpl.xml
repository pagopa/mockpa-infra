<fragment>
    <set-variable name="sessionToken" value="@(context.Request.Headers.GetValueOrDefault("Authorization", "").Replace("Bearer ",""))" />
    <!--try to retrieve user id from session token if the session token is a JWT token and have userId claim-->
    <set-variable name="sessionTokenUserId" value="@{
        string sessionToken = (string)context.Variables["sessionToken"];
            try {
                string[] sessionTokenParts = sessionToken.Split('.');
                string sessionTokenBody = sessionTokenParts.Length >1 ? sessionTokenParts[1] : "";
                int reminder = sessionTokenBody.Length % 4;
                int toPad = reminder > 1 ? (4-reminder) : 0;
				string padded = string.Concat(sessionTokenBody,string.Concat(Enumerable.Repeat("=", toPad)));
		  		byte[] data = Convert.FromBase64String(padded);
                string decodedString = System.Text.Encoding.UTF8.GetString(data);
                Dictionary<string,string> parsed = JsonConvert.DeserializeObject<Dictionary<string,string>>(decodedString);
                string userId = (string)parsed?["userId"];
                return String.IsNullOrEmpty(userId) ? "user-id-not-found" : userId;
            } catch(Exception){
            return "user-id-not-found";
            }
    }" />
</fragment>