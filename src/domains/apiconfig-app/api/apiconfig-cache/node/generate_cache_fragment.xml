<!--
    IMPORTANT:
    - Policy fragment are included as-is whenever they are referenced.
    - If using variables. Ensure they are setup before use.
    - Copy and paste your code here or simply start coding
-->
<fragment>
  <!-- set cache in progress at least for 15 minutes -->
  <cache-store-value key="@(context.Variables.GetValueOrDefault("cache_key_in_progress", "cache_key_in_progress"))" value="true" duration="900" caching-type="internal" />
  <!-- call backend -->
  <send-request mode="new" response-variable-name="cache-response" timeout="120" ignore-error="true">
    <set-url>@(String.Concat(context.Variables.GetValueOrDefault("cacheBaseUrl"), context.Variables.GetValueOrDefault("cacheBasePath")))</set-url>
    <set-method>GET</set-method>
  </send-request>
  <!-- on response return data -->
  <trace source="cache-response-status-code" severity="information">@( ( ((IResponse)context.Variables["cache-response"]).StatusCode == 200 ).ToString() )</trace>
  <choose>
    <when condition="@(((IResponse)context.Variables["cache-response"]).StatusCode == 200)">

    <!-- set cache data according to the related cache_key -->
    <cache-store-value key="@(context.Variables.GetValueOrDefault("cache_key", "cache_key"))" caching-type="external" value="@(((IResponse)context.Variables["cache-response"]).Body.As<JObject>(preserveContent: true))" duration="86400" />
    <!-- unset cache in progress -->
    <cache-remove-value key="@(context.Variables.GetValueOrDefault("cache_key_in_progress", "cache_key_in_progress"))" caching-type="internal" />
    <return-response response-variable-name="existing context variable">
      <set-status code="200" reason="OK" />
      <set-header name="Content-Type" exists-action="override">
        <value>application/json</value>
      </set-header>
      <set-body>@(((IResponse)context.Variables["cache-response"]).Body.As<JObject>(preserveContent: true).ToString())</set-body>
    </return-response>
  </when>
  <otherwise>
    <!-- unset cache in progress -->
    <cache-remove-value key="@(context.Variables.GetValueOrDefault("cache_key_in_progress", "cache_key_in_progress"))" caching-type="internal" />
    <mock-response status-code="503" content-type="application/json" />
  </otherwise>
</choose>
  </fragment>
