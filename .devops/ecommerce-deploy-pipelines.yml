# only manual
trigger: none
pr: none

parameters:
  - name: 'DEV'
    displayName: 'Run on DEV environment'
    type: boolean
    default: True
    values:
      - False
      - True
  - name: 'UAT'
    displayName: 'Run on UAT environment'
    type: boolean
    default: True
    values:
      - False
      - True
  - name: 'PROD'
    displayName: 'Run on PROD environment'
    type: boolean
    default: True
    values:
      - False
      - True

variables:
  TIME_OUT: 10
  # working dir
  WORKING_DIR_APP: 'src/domains/ecommerce-app'
  WORKING_DIR_COMMON: 'src/domains/ecommerce-common'
  DOMAIN_NAME: ecommerce
  poolNameDev: '$(TF_POOL_NAME_DEV)'
  poolNameUat: '$(TF_POOL_NAME_UAT)'
  poolNameProd: '$(TF_POOL_NAME_PROD)'
  #PLAN
  azureServiceConnectionPlanNameDev: '$(TF_AZURE_SERVICE_CONNECTION_PLAN_NAME_DEV)'
  azureServiceConnectionPlanNameUat: '$(TF_AZURE_SERVICE_CONNECTION_PLAN_NAME_UAT)'
  azureServiceConnectionPlanNameProd: '$(TF_AZURE_SERVICE_CONNECTION_PLAN_NAME_PROD)'
  #APPLY
  azureServiceConnectionApplyNameDev: '$(TF_AZURE_SERVICE_CONNECTION_APPLY_NAME_DEV)'
  azureServiceConnectionApplyNameUat: '$(TF_AZURE_SERVICE_CONNECTION_APPLY_NAME_UAT)'
  azureServiceConnectionApplyNameProd: '$(TF_AZURE_SERVICE_CONNECTION_APPLY_NAME_PROD)'
  githubEndpointName: '$(TF_GITHUB_SERVICE_ENDPOINT_NAME)'

  DEV_AKS_APISERVER_URL: '$(TF_DEV_AKS_APISERVER_URL)'
  DEV_AKS_AZURE_DEVOPS_SA_CACRT: '$(TF_DEV_AKS_AZURE_DEVOPS_SA_CACRT)'
  DEV_AKS_AZURE_DEVOPS_SA_TOKEN: '$(TF_DEV_AKS_AZURE_DEVOPS_SA_TOKEN)'
  AKS_DEV_NAME: '$(TF_AKS_DEV_NAME)'

  UAT_AKS_APISERVER_URL: '$(TF_UAT_AKS_APISERVER_URL)'
  UAT_AKS_AZURE_DEVOPS_SA_CACRT: '$(TF_UAT_AKS_AZURE_DEVOPS_SA_CACRT)'
  UAT_AKS_AZURE_DEVOPS_SA_TOKEN: '$(TF_UAT_AKS_AZURE_DEVOPS_SA_TOKEN)'
  AKS_UAT_NAME: '$(TF_AKS_UAT_NAME)'

  PROD_AKS_APISERVER_URL: '$(TF_PROD_AKS_APISERVER_URL)'
  PROD_AKS_AZURE_DEVOPS_SA_CACRT: '$(TF_PROD_AKS_AZURE_DEVOPS_SA_CACRT)'
  PROD_AKS_AZURE_DEVOPS_SA_TOKEN: '$(TF_PROD_AKS_AZURE_DEVOPS_SA_TOKEN)'
  AKS_PROD_NAME: '$(TF_AKS_PROD_NAME)'

pool:
  vmImage: 'ubuntu-latest'

resources:
  repositories:
    - repository: terraform
      type: github
      name: pagopa/azure-pipeline-templates
      ref: refs/tags/v6.0.0
      endpoint: "io-azure-devops-github-ro"
    #Checkout tests repo that contains e2e tests to be executed after domain apply
    - repository: pagopaCheckoutTests
      type: github
      name: pagopa/pagopa-checkout-tests
      ref: main
      endpoint: 'io-azure-devops-github-ro'

stages:
#DEV
  - ${{ if eq(parameters['DEV'], true) }}:
   #COMMON
    - template: templates/terraform-plan-apply/template.yaml@terraform
      parameters:
        FULL_DOMAIN_NAME: "${{variables.DOMAIN_NAME}}_common"
        TF_ENVIRONMENT_FOLDER: "weu-dev"
        ENVIRONMENT: "DEV"
        AZURE_DEVOPS_POOL_AGENT_NAME: "${{variables.poolNameDev}}"
        WORKINGDIR: ${{ variables.WORKING_DIR_COMMON }}
        AZURE_SERVICE_CONNECTION_PLAN_NAME: "${{variables.azureServiceConnectionPlanNameDev}}"
        AZURE_SERVICE_CONNECTION_APPLY_NAME: "${{variables.azureServiceConnectionApplyNameDev}}"
    #APP
    - template: templates/terraform-plan-apply/template.yaml@terraform
      parameters:
        FULL_DOMAIN_NAME: "${{variables.DOMAIN_NAME}}_app"
        TF_ENVIRONMENT_FOLDER: "weu-dev"
        ENVIRONMENT: "DEV"
        AZURE_DEVOPS_POOL_AGENT_NAME: "${{variables.poolNameDev}}"
        WORKINGDIR: ${{ variables.WORKING_DIR_APP }}
        AZURE_SERVICE_CONNECTION_PLAN_NAME: "${{variables.azureServiceConnectionPlanNameDev}}"
        AZURE_SERVICE_CONNECTION_APPLY_NAME: "${{variables.azureServiceConnectionApplyNameDev}}"
        AKS_NAME: ${{ variables.AKS_DEV_NAME }}
        AKS_API_SERVER_URL: ${{ variables.DEV_AKS_APISERVER_URL }}
        AKS_AZURE_DEVOPS_SA_CA_CRT: ${{ variables.DEV_AKS_AZURE_DEVOPS_SA_CACRT }}
        AKS_AZURE_DEVOPS_SA_TOKEN: ${{ variables.DEV_AKS_AZURE_DEVOPS_SA_TOKEN }}
    # E2E test
    - stage: "E2E_Tests_Checkout_DEV_environment"
      displayName: 'ðŸ§ª Running E2E test on DEV env'
      pool:
        vmImage: 'ubuntu-latest'
      dependsOn: dev_apply_ecommerce_app
      jobs:
        - job: e2e_tests
          steps:
            - template: .devops/azure-templates/e2e-tests.yaml@pagopaCheckoutTests
              parameters:
                ENVIRONMENT: DEV
                CHECKOUT_RESOURCE_REPO_NAME: pagopaCheckoutTests


#UAT
  - ${{ if eq(parameters['UAT'], true) }}:
    #COMMON
    - template: templates/terraform-plan-apply/template.yaml@terraform
      parameters:
        FULL_DOMAIN_NAME: "${{variables.DOMAIN_NAME}}_common"
        TF_ENVIRONMENT_FOLDER: "weu-uat"
        ENVIRONMENT: "UAT"
        AZURE_DEVOPS_POOL_AGENT_NAME: "${{variables.poolNameUat}}"
        WORKINGDIR: ${{ variables.WORKING_DIR_COMMON }}
        AZURE_SERVICE_CONNECTION_PLAN_NAME: "${{variables.azureServiceConnectionPlanNameUat}}"
        AZURE_SERVICE_CONNECTION_APPLY_NAME: "${{variables.azureServiceConnectionApplyNameUat}}"
    #APP
    - template: templates/terraform-plan-apply/template.yaml@terraform
      parameters:
        FULL_DOMAIN_NAME: "${{variables.DOMAIN_NAME}}_app"
        TF_ENVIRONMENT_FOLDER: "weu-uat"
        ENVIRONMENT: "UAT"
        AZURE_DEVOPS_POOL_AGENT_NAME: "${{variables.poolNameUat}}"
        WORKINGDIR: ${{ variables.WORKING_DIR_APP }}
        AZURE_SERVICE_CONNECTION_PLAN_NAME: "${{variables.azureServiceConnectionPlanNameUat}}"
        AZURE_SERVICE_CONNECTION_APPLY_NAME: "${{variables.azureServiceConnectionApplyNameUat}}"
        AKS_NAME: ${{ variables.AKS_UAT_NAME }}
        AKS_API_SERVER_URL: ${{ variables.UAT_AKS_APISERVER_URL }}
        AKS_AZURE_DEVOPS_SA_CA_CRT: ${{ variables.UAT_AKS_AZURE_DEVOPS_SA_CACRT }}
        AKS_AZURE_DEVOPS_SA_TOKEN: ${{ variables.UAT_AKS_AZURE_DEVOPS_SA_TOKEN }}

      # E2E test
    - stage: "E2E_Tests_Checkout_UAT_environment"
      displayName: 'ðŸ§ª Running E2E test on UAT env'
      pool:
        vmImage: 'ubuntu-latest'
      dependsOn: uat_apply_ecommerce_app
      jobs:
        - job: e2e_tests
          steps:
            - template: .devops/azure-templates/e2e-tests.yaml@pagopaCheckoutTests
              parameters:
                ENVIRONMENT: UAT
                CHECKOUT_RESOURCE_REPO_NAME: pagopaCheckoutTests


#PROD
  - ${{ if eq(parameters['PROD'], true) }}:
    #COMMON
    - template: templates/terraform-plan-apply/template.yaml@terraform
      parameters:
        FULL_DOMAIN_NAME: "${{variables.DOMAIN_NAME}}_common"
        TF_ENVIRONMENT_FOLDER: "weu-prod"
        ENVIRONMENT: "PROD"
        AZURE_DEVOPS_POOL_AGENT_NAME: "${{variables.poolNameProd}}"
        WORKINGDIR: ${{ variables.WORKING_DIR_COMMON }}
        AZURE_SERVICE_CONNECTION_PLAN_NAME: "${{variables.azureServiceConnectionPlanNameProd}}"
        AZURE_SERVICE_CONNECTION_APPLY_NAME: "${{variables.azureServiceConnectionApplyNameProd}}"
    #APP
    - template: templates/terraform-plan-apply/template.yaml@terraform
      parameters:
        FULL_DOMAIN_NAME: "${{variables.DOMAIN_NAME}}_app"
        TF_ENVIRONMENT_FOLDER: "weu-prod"
        ENVIRONMENT: "PROD"
        AZURE_DEVOPS_POOL_AGENT_NAME: "${{variables.poolNameProd}}"
        WORKINGDIR: ${{ variables.WORKING_DIR_APP }}
        AZURE_SERVICE_CONNECTION_PLAN_NAME: "${{variables.azureServiceConnectionPlanNameProd}}"
        AZURE_SERVICE_CONNECTION_APPLY_NAME: "${{variables.azureServiceConnectionApplyNameProd}}"
        AKS_NAME: ${{ variables.AKS_PROD_NAME }}
        AKS_API_SERVER_URL: ${{ variables.PROD_AKS_APISERVER_URL }}
        AKS_AZURE_DEVOPS_SA_CA_CRT: ${{ variables.PROD_AKS_AZURE_DEVOPS_SA_CACRT }}
        AKS_AZURE_DEVOPS_SA_TOKEN: ${{ variables.PROD_AKS_AZURE_DEVOPS_SA_TOKEN }}

    - stage:
      displayName: 'ðŸ’» Dashboards generation GHA'
      jobs:
      - job: generate_dashboard
        steps:
        - task: Bash@3
          displayName: 'Dashboard generation'
          inputs:
            targetType: "inline"
            script: |
              echo "Launching ecommerce dashboard generation apply"
              body=$(cat <<EOF
              {
                  "ref": "main",
                  "inputs": {
                      "api-name": "ecommerce-checkout",
                      "environment": "prod",
                      "config-options": "{\"branch_ref\": \"$(Build.SourceBranchName)\"}"
                  }
              }
              EOF
              )
              echo "GHA trigger body $body"
              curl -X POST https://api.github.com/repos/pagopa/pagopa-ecommerce-dashboard/actions/workflows/63761953/dispatches \
              -H 'Content-Type: application/json' \
              -H 'X-GitHub-Api-Version: 2022-11-28' \
              -H "Authorization: token ${{ variables.PROD_AZURE_WEBHOOK_DASHBOARD_CREATION_TOKEN }}" \
              --data "$body"
