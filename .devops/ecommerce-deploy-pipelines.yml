# only manual
trigger: none
pr: none

parameters:
  - name: 'DEV'
    displayName: 'Run on DEV environment'
    type: boolean
    default: True
    values:
      - False
      - True
  - name: 'UAT'
    displayName: 'Run on UAT environment'
    type: boolean
    default: True
    values:
      - False
      - True
  - name: 'PROD'
    displayName: 'Run on PROD environment'
    type: boolean
    default: True
    values:
      - False
      - True

variables:
  TIME_OUT: 30
  DEV_AKS_APISERVER_URL: '$(TF_DEV_AKS_APISERVER_URL)'
  DEV_AKS_AZURE_DEVOPS_SA_CACRT: '$(TF_DEV_AKS_AZURE_DEVOPS_SA_CACRT)'
  DEV_AKS_AZURE_DEVOPS_SA_TOKEN: '$(TF_DEV_AKS_AZURE_DEVOPS_SA_TOKEN)'
  AKS_DEV_NAME: '$(TF_AKS_DEV_NAME)'
  DEV_AZURE_SERVICE_CONNECTION: '$(TF_DEV_AZURE_SERVICE_CONNECTION)'

  UAT_AKS_APISERVER_URL: '$(TF_UAT_AKS_APISERVER_URL)'
  UAT_AKS_AZURE_DEVOPS_SA_CACRT: '$(TF_UAT_AKS_AZURE_DEVOPS_SA_CACRT)'
  UAT_AKS_AZURE_DEVOPS_SA_TOKEN: '$(TF_UAT_AKS_AZURE_DEVOPS_SA_TOKEN)'
  AKS_UAT_NAME: '$(TF_AKS_UAT_NAME)'
  UAT_AZURE_SERVICE_CONNECTION: '$(TF_UAT_AZURE_SERVICE_CONNECTION)'

  PROD_AKS_APISERVER_URL: '$(TF_PROD_AKS_APISERVER_URL)'
  PROD_AKS_AZURE_DEVOPS_SA_CACRT: '$(TF_PROD_AKS_AZURE_DEVOPS_SA_CACRT)'
  PROD_AKS_AZURE_DEVOPS_SA_TOKEN: '$(TF_PROD_AKS_AZURE_DEVOPS_SA_TOKEN)'
  AKS_PROD_NAME: '$(TF_AKS_PROD_NAME)'
  PROD_AZURE_SERVICE_CONNECTION: '$(TF_PROD_AZURE_SERVICE_CONNECTION)'
  PROD_AZURE_WEBHOOK_DASHBOARD_CREATION_TOKEN: '${ PAGOPA-P-AZURE-WEBHOOK-DASHBOARD-CREATION-TOKEN}'

pool:
  vmImage: 'ubuntu-20.04'

resources:
  repositories:
    - repository: terraform
      type: github
      name: pagopa/azure-pipeline-templates
      ref: refs/tags/v3.0.0
      endpoint: 'io-azure-devops-github-ro'

lockBehavior: sequential
stages:
  - ${{ if eq(parameters['DEV'], true) }}:
    # DEV ecommerce COMMON
    - template: templates/terraform-plan-apply/template.yaml@terraform
      parameters:
        DOMAIN_NAME: 'ecommerce_common'
        AZURE_DEVOPS_POOL_AGENT_NAME: "pagopa-dev-linux-infra"
        ENVIRONMENT: "dev"
        TF_ENVIRONMENT_FOLDER: "weu-dev"
        WORKINGDIR: 'src/domains/ecommerce-common'
        AZURE_SERVICE_CONNECTION_NAME: ${{ variables.DEV_AZURE_SERVICE_CONNECTION }}

    # DEV ecommerce APP
    - template: templates/terraform-plan-apply/template.yaml@terraform
      parameters:
        DOMAIN_NAME: 'ecommerce_app'
        AZURE_DEVOPS_POOL_AGENT_NAME: "pagopa-dev-linux-infra"
        ENVIRONMENT: "dev"
        TF_ENVIRONMENT_FOLDER: "weu-dev"
        WORKINGDIR: 'src/domains/ecommerce-app'
        AZURE_SERVICE_CONNECTION_NAME: ${{ variables.DEV_AZURE_SERVICE_CONNECTION }}
        AKS_NAME: ${{ variables.AKS_DEV_NAME }}
        AKS_API_SERVER_URL: ${{ variables.DEV_AKS_APISERVER_URL }}
        AKS_AZURE_DEVOPS_SA_CA_CRT: ${{ variables.DEV_AKS_AZURE_DEVOPS_SA_CACRT }}
        AKS_AZURE_DEVOPS_SA_TOKEN: ${{ variables.DEV_AKS_AZURE_DEVOPS_SA_TOKEN }}



  #
  # UAT
  #
  - ${{ if eq(parameters['UAT'], true) }}:
    # UAT ecommerce COMMON
    - template: templates/terraform-plan-apply/template.yaml@terraform
      parameters:
        DOMAIN_NAME: 'ecommerce_common'
        AZURE_DEVOPS_POOL_AGENT_NAME: "pagopa-uat-linux-infra"
        ENVIRONMENT: "uat"
        TF_ENVIRONMENT_FOLDER: "weu-uat"
        WORKINGDIR: 'src/domains/ecommerce-common'
        AZURE_SERVICE_CONNECTION_NAME: ${{ variables.UAT_AZURE_SERVICE_CONNECTION }}

    # UAT ecommerce APP
    - template: templates/terraform-plan-apply/template.yaml@terraform
      parameters:
        DOMAIN_NAME: 'ecommerce_app'
        AZURE_DEVOPS_POOL_AGENT_NAME: "pagopa-uat-linux-infra"
        ENVIRONMENT: "uat"
        TF_ENVIRONMENT_FOLDER: "weu-uat"
        WORKINGDIR: 'src/domains/ecommerce-app'
        AZURE_SERVICE_CONNECTION_NAME: ${{ variables.UAT_AZURE_SERVICE_CONNECTION }}
        AKS_NAME: ${{ variables.AKS_UAT_NAME }}
        AKS_API_SERVER_URL: ${{ variables.UAT_AKS_APISERVER_URL }}
        AKS_AZURE_DEVOPS_SA_CA_CRT: ${{ variables.UAT_AKS_AZURE_DEVOPS_SA_CACRT }}
        AKS_AZURE_DEVOPS_SA_TOKEN: ${{ variables.UAT_AKS_AZURE_DEVOPS_SA_TOKEN }}


  #
  # PROD
  #
  - ${{ if eq(parameters['PROD'], true) }}:
    # PROD ecommerce COMMON
    - template: templates/terraform-plan-apply/template.yaml@terraform
      parameters:
        DOMAIN_NAME: 'ecommerce_common'
        AZURE_DEVOPS_POOL_AGENT_NAME: "pagopa-prod-linux-infra"
        ENVIRONMENT: "prod"
        TF_ENVIRONMENT_FOLDER: "weu-prod"
        WORKINGDIR: 'src/domains/ecommerce-common'
        AZURE_SERVICE_CONNECTION_NAME: ${{ variables.PROD_AZURE_SERVICE_CONNECTION }}

    # PROD ecommerce APP
    - template: templates/terraform-plan-apply/template.yaml@terraform
      parameters:
        DOMAIN_NAME: 'ecommerce_app'
        AZURE_DEVOPS_POOL_AGENT_NAME: "pagopa-prod-linux-infra"
        ENVIRONMENT: "prod"
        TF_ENVIRONMENT_FOLDER: "weu-prod"
        WORKINGDIR: 'src/domains/ecommerce-app'
        AZURE_SERVICE_CONNECTION_NAME: ${{ variables.PROD_AZURE_SERVICE_CONNECTION }}
        AKS_NAME: ${{ variables.AKS_PROD_NAME }}
        AKS_API_SERVER_URL: ${{ variables.PROD_AKS_APISERVER_URL }}
        AKS_AZURE_DEVOPS_SA_CA_CRT: ${{ variables.PROD_AKS_AZURE_DEVOPS_SA_CACRT }}
        AKS_AZURE_DEVOPS_SA_TOKEN: ${{ variables.PROD_AKS_AZURE_DEVOPS_SA_TOKEN }}

    - stage:
      jobs: 
      - job: test_job
        pool: server
        steps:
        - task: Bash@3 
          displayName: 'Dashboard generation'
          inputs:
            script: | 
              echo "Launching ecommerce dashboard generation apply"
              curl -d '{"key1":"value1", "key2":"value2"}' -H "Content-Type: application/json, X-GitHub-Api-Version: 2022-11-28, Authorization: Bearer bearerToken" -X POST https://api.github.com/repos/pagopa/pagopa-ecommerce-dashboard/actions/workflows/63761953/dispatches

