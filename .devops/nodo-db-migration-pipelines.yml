pr: none
trigger: none
#trigger:
#  - develop

pool:
  vmImage: 'ubuntu-latest'

parameters:
  - name: k8sEnv
    displayName: K8s Environment
    type: string
    default: dev
    values:
      - dev
      - uat
      - prd
  - name: dbVersion
    displayName: Database Version
    type: string
  - name: lbLogLevel
    displayName: Liquibase Log Level
    type: string
    default: INFO
    values:
      - INFO
      - FINE
      - WARNING
      - SEVERE

variables:
  - name: DEV_AZURE_SERVICE_CONNECTION
    value: '$(TF_DEV_AZURE_SERVICE_CONNECTION)'
  - name: changelogRoot
    value: $(Pipeline.Workspace)/src/psql/nodo/liquibase/changelog
  - name: jdbUrl-dev
    value: jdbc:postgresql://pagopa-d-weu-nodo-flexible-postgresql-2.postgres.database.azure.com:5432/nodo?sslmode=require
  - name: jdbUrl-uat
    value: jdbc:postgresql://pagopa-d-weu-nodo-flexible-postgresql-2.postgres.database.azure.com:5432/nodo?sslmode=require
  - name: jdbUrl-prd
    value: jdbc:postgresql://pagopa-d-weu-nodo-flexible-postgresql-2.postgres.database.azure.com:5432/nodo?sslmode=require

stages:
  ## GET INFO
  - stage: get_info
    displayName: "Initialization"
    jobs:
      - job: initialization
        displayName: "Install liquibase"
        steps:
          - checkout: self
            clean: true
            persistCredentials: true
          - script: |
              cd $(Pipeline.Workspace)
              mkdir liquibase-app
              wget -c https://github.com/liquibase/liquibase/releases/download/v4.10.0/liquibase-4.10.0.tar.gz
              tar -xzf liquibase-4.10.0.tar.gz -C liquibase-app
              rm -rf liquibase-4.10.0.tar.gz
              echo "##vso[task.prependpath]$(Pipeline.Workspace)/liquibase-app"
            displayName: "Install Liquibase"
      - job: run
        displayName: "Run liquibase"
        steps:
          - checkout: self
            clean: true
            persistCredentials: true
          - ${{ if eq(parameters.k8sEnv, 'dev') }}:
              - task: AzureKeyVault@2
                displayName: "Get dev secrets"
                inputs:
                  azureSubscription: $(DEV_AZURE_SERVICE_CONNECTION)
                  keyVaultName: 'pagopa-d-nodo-kv'
                  secretsFilter: 'db-*'
                  runAsPreJob: true
          - ${{ elseif eq(parameters.k8sEnv, 'uat') }}:
              - task: AzureKeyVault@2
                displayName: "Get uat secrets"
                inputs:
                  azureSubscription: 'UAT-pagoPA'
                  keyVaultName: 'pagopa-u-nodo-kv'
                  secretsFilter: 'db-*'
                  runAsPreJob: true
          - ${{ elseif eq(parameters.k8sEnv, 'prd') }}:
              - task: AzureKeyVault@2
                displayName: "Get prd secrets"
                inputs:
                  azureSubscription: 'PRD-pagoPA'
                  keyVaultName: 'pagopa-p-nodo-kv'
                  secretsFilter: 'db-*'
                  runAsPreJob: true

          - script: |
              liquibase \
              --url=$[ jdbUrl-${{ parameters.k8sEnv }} ] \
              --username=cfg \
              --password=$(db-cfg-password) \
              --classpath=${{ variables.changelogRoot }} \
              --changeLogFile=${{ variables.changelogRoot }}/cfg/db.changelog-master-${{ parameters.dbVersion }}.xml \
              --liquibaseSchemaName=cfg \
              --defaultSchemaName=cfg \
              --contexts=${{ parameters.k8sEnv }} \
              --log-level=${{ parameters.lbLogLevel }} \
              update -Dschema=cfg
            displayName: "Run Liquibase CFG"
