<policies>
    <inbound>
        <cors>
            <allowed-origins>
                <origin>*</origin>
            </allowed-origins>
            <allowed-methods>
                <method>*</method>
            </allowed-methods>
            <allowed-headers>
                <header>*</header>
            </allowed-headers>
            <expose-headers>
                <header>*</header>
            </expose-headers>
        </cors>
        <set-variable name="donazioniucraina" value="{{donazioni-ucraina}}" />
        <set-variable name="logo1" value="${logo_1}" />
        <return-response>
            <set-status code="200" reason="OK" />
            <set-header name="Content-Type" exists-action="override">
                <value>application/json</value>
            </set-header>
            <set-body>@{
                var donazioniucraina = ((string) context.Variables["donazioniucraina"]);
                JObject json = JObject.Parse(donazioniucraina);
                var idx=1;
                foreach (var item1 in json["data"])
                {
                    var auxdigit = (string)((JObject) item1)["auxdigit"];
                    var segregationcode = (string)((JObject) item1)["segregationcode"];

                    ((JObject) item1).Remove("iban"); // del property
                    ((JObject) item1).Remove("auxdigit"); // del property
                    ((JObject) item1).Remove("segregationcode"); // del property
                    ((JObject) item1)["base64Logo"]=(string) context.Variables["logo"+idx];
                    idx++;

                    foreach (var item2 in ((JObject) item1)["slices"])
                    {
                        var iuv = DateTimeOffset.Now.ToUnixTimeMilliseconds().ToString();
                        var nav = auxdigit+segregationcode+((JObject) item2)["idDonation"]+iuv;
                        ((JObject) item2).Add(new JProperty("nav",nav)); // add property
                        // ((JObject) item2).Add("nav", JObject.Parse(@"{""colour"":""yellow"",""size"":""medium""}"));
                    }
                }
                return json["data"].ToString();

             }</set-body>
        </return-response>
        <base />
    </inbound>
    <backend>
        <base />
    </backend>
    <outbound />
    <on-error>
        <base />
    </on-error>
</policies>
