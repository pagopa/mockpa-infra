pr: none
trigger: none
#trigger:
#  - develop

pool:
  vmImage: 'ubuntu-latest'

parameters:
  - name: k8sEnv
    displayName: K8s Environment
    type: string
    default: dev
    values:
      - dev
      - uat
      - prd
  - name: dbVersion
    displayName: Database Version
    type: string
  - name: lbLogLevel
    displayName: Liquibase Log Level
    type: string
    default: INFO
    values:
      - INFO
      - FINE
      - WARNING
      - SEVERE

variables:
  - name: DEV_AZURE_SERVICE_CONNECTION
    value: '$(TF_DEV_AZURE_SERVICE_CONNECTION)'
  - name: UAT_AZURE_SERVICE_CONNECTION
    value: '$(TF_UAT_AZURE_SERVICE_CONNECTION)'
  - name: PRD_AZURE_SERVICE_CONNECTION
    value: '$(TF_PROD_AZURE_SERVICE_CONNECTION)'
  - name: JDBCURL-DEV
    value: jdbc:postgresql://pagopa-d-weu-nodo-flexible-postgresql-2.postgres.database.azure.com:5432/nodo?sslmode=require
  - name: JDBCURL-UAT
    value: jdbc:postgresql://pagopa-d-weu-nodo-flexible-postgresql-2.postgres.database.azure.com:5432/nodo?sslmode=require
  - name: JDBCURL-PRD
    value: jdbc:postgresql://pagopa-d-weu-nodo-flexible-postgresql-2.postgres.database.azure.com:5432/nodo?sslmode=require
  - name: POSTGRES_USER
    value: azureuser
  - name: POSTGRES_DB
    value: nodo
  - name: CFG_USERNAME
    value: cfg
  - name: CFG_SCHEMA
    value: cfg
  - name: OFFLINE_USERNAME
    value: offline
  - name: OFFLINE_SCHEMA
    value: offline
  - name: ONLINE_USERNAME
    value: online
  - name: ONLINE_SCHEMA
    value: online
  - name: RE_USERNAME
    value: re
  - name: RE_SCHEMA
    value: re
  - name: WFESP_USERNAME
    value: wfesp
  - name: WFESP_SCHEMA
    value: wfesp

stages:
  ## GET INFO
  - stage: get_info
    displayName: "Initialization"
    jobs:
      - job: initialization
        displayName: "Update nodo DB ${{ parameters.k8sEnv }}"
        steps:
          - checkout: self
            clean: true
            persistCredentials: true
          - script: |
              cd $(Pipeline.Workspace)
              mkdir liquibase-app
              wget -c https://github.com/liquibase/liquibase/releases/download/v4.17.1/liquibase-4.17.1.tar.gz
              tar -xzf liquibase-4.17.1.tar.gz -C liquibase-app
              rm -rf liquibase-4.17.1.tar.gz
              ls -la liquibase-app
              echo "##vso[task.prependpath]$(Pipeline.Workspace)/liquibase-app"
            displayName: "Install Liquibase"
          - ${{ if eq(parameters.k8sEnv, 'dev') }}:
              - task: AzureKeyVault@2
                displayName: "Get dev secrets"
                inputs:
                  azureSubscription: $(DEV_AZURE_SERVICE_CONNECTION)
                  keyVaultName: 'pagopa-d-nodo-kv'
                  secretsFilter: '*'
                  runAsPreJob: true
          - ${{ elseif eq(parameters.k8sEnv, 'uat') }}:
              - task: AzureKeyVault@2
                displayName: "Get uat secrets"
                inputs:
                  azureSubscription: $(UAT_AZURE_SERVICE_CONNECTION)
                  keyVaultName: 'pagopa-u-nodo-kv'
                  secretsFilter: '*'
                  runAsPreJob: true
          - ${{ elseif eq(parameters.k8sEnv, 'prd') }}:
              - task: AzureKeyVault@2
                displayName: "Get prd secrets"
                inputs:
                  azureSubscription: $(PRD_AZURE_SERVICE_CONNECTION)
                  keyVaultName: 'pagopa-p-nodo-kv'
                  secretsFilter: '*'
                  runAsPreJob: true
          - ${{ if eq(parameters.k8sEnv, 'dev') }}:
              - script:
                  echo "##vso[task.setvariable variable=JDBC_URL;]$(JDBCURL-DEV)"
          - ${{ elseif eq(parameters.k8sEnv, 'uat') }}:
              - script:
                  echo "##vso[task.setvariable variable=JDBC_URL;]$(JDBCURL-UAT)"
          - ${{ elseif eq(parameters.k8sEnv, 'prd') }}:
              - script:
                  echo "##vso[task.setvariable variable=JDBC_URL;]$(JDBCURL-PRD)"
          - script: |
              liquibase \
              --url=$(JDBC_URL) \
              --username=$(CFG_USERNAME) \
              --password=$(db-cfg-password) \
              --classpath=src/psql/nodo/liquibase/changelog/cfg \
              --changeLogFile=db.changelog-master-${{ parameters.dbVersion }}.xml \
              --liquibaseSchemaName=$(CFG_SCHEMA) \
              --defaultSchemaName=$(CFG_SCHEMA) \
              --contexts=${{ parameters.k8sEnv }} \
              --log-level=${{ parameters.lbLogLevel }} \
              update -Dschema=$(CFG_SCHEMA)
            displayName: "Run Liquibase cfg"
          - script: |
              liquibase \
              --url=$(JDBC_URL) \
              --username=$(CFG_USERNAME) \
              --password=$(db-cfg-password) \
              --classpath=src/psql/nodo/liquibase/changelog/cfg \
              --changeLogFile=db.changelog-master-${{ parameters.dbVersion }}.xml \
              --liquibaseSchemaName=$(CFG_SCHEMA) \
              --defaultSchemaName=$(CFG_SCHEMA) \
              --contexts=${{ parameters.k8sEnv }} \
              --log-level=${{ parameters.lbLogLevel }} \
              tag ${{ parameters.dbVersion }}
            displayName: "Tag cfg"
          - script: |
              liquibase \
              --url=$(JDBC_URL) \
              --username=$(ONLINE_USERNAME) \
              --password=$(db-online-password) \
              --classpath=src/psql/nodo/liquibase/changelog/online \
              --changeLogFile=db.changelog-master-${{ parameters.dbVersion }}.xml \
              --liquibaseSchemaName=$(ONLINE_SCHEMA) \
              --defaultSchemaName=$(ONLINE_SCHEMA) \
              --contexts=${{ parameters.k8sEnv }} \
              --log-level=${{ parameters.lbLogLevel }} \
              update -Dschema=$(ONLINE_SCHEMA) -DschemaOffline=$(OFFLINE_SCHEMA) -DusernameOffline=$(OFFLINE_USERNAME)
            displayName: "Run Liquibase online"
          - script: |
              liquibase \
              --url=$(JDBC_URL) \
              --username=$(ONLINE_USERNAME) \
              --password=$(db-online-password) \
              --classpath=src/psql/nodo/liquibase/changelog/online \
              --changeLogFile=db.changelog-master-${{ parameters.dbVersion }}.xml \
              --liquibaseSchemaName=$(ONLINE_SCHEMA) \
              --defaultSchemaName=$(ONLINE_SCHEMA) \
              --contexts=${{ parameters.k8sEnv }} \
              --log-level=${{ parameters.lbLogLevel }} \
              tag ${{ parameters.dbVersion }}
            displayName: "Tag online"
          - script: |
              liquibase \
              --url=$(JDBC_URL) \
              --username=$(OFFLINE_USERNAME) \
              --password=$(db-offline-password) \
              --classpath=src/psql/nodo/liquibase/changelog/offline \
              --changeLogFile=db.changelog-master-${{ parameters.dbVersion }}.xml \
              --liquibaseSchemaName=$(OFFLINE_SCHEMA) \
              --defaultSchemaName=$(OFFLINE_SCHEMA) \
              --contexts=${{ parameters.k8sEnv }} \
              --log-level=${{ parameters.lbLogLevel }} \
              update -Dschema=$(OFFLINE_SCHEMA) -DschemaOnline=$(ONLINE_SCHEMA)
            displayName: "Run Liquibase offline"
          - script: |
              liquibase \
              --url=$(JDBC_URL) \
              --username=$(OFFLINE_USERNAME) \
              --password=$(db-offline-password) \
              --classpath=src/psql/nodo/liquibase/changelog/offline \
              --changeLogFile=db.changelog-master-${{ parameters.dbVersion }}.xml \
              --liquibaseSchemaName=$(OFFLINE_SCHEMA) \
              --defaultSchemaName=$(OFFLINE_SCHEMA) \
              --contexts=${{ parameters.k8sEnv }} \
              --log-level=${{ parameters.lbLogLevel }} \
              tag ${{ parameters.dbVersion }}
            displayName: "Tag offline"
          - script: |
              liquibase \
              --url=$(JDBC_URL) \
              --username=$(RE_USERNAME) \
              --password=$(db-re-password) \
              --classpath=src/psql/nodo/liquibase/changelog/re \
              --changeLogFile=db.changelog-master-${{ parameters.dbVersion }}.xml \
              --liquibaseSchemaName=$(RE_SCHEMA) \
              --defaultSchemaName=$(RE_SCHEMA) \
              --contexts=${{ parameters.k8sEnv }} \
              --log-level=${{ parameters.lbLogLevel }} \
              update -Dschema=$(RE_SCHEMA)
            displayName: "Run Liquibase re"
          - script: |
              liquibase \
              --url=$(JDBC_URL) \
              --username=$(RE_USERNAME) \
              --password=$(db-re-password) \
              --classpath=src/psql/nodo/liquibase/changelog/re \
              --changeLogFile=db.changelog-master-${{ parameters.dbVersion }}.xml \
              --liquibaseSchemaName=$(RE_SCHEMA) \
              --defaultSchemaName=$(RE_SCHEMA) \
              --contexts=${{ parameters.k8sEnv }} \
              --log-level=${{ parameters.lbLogLevel }} \
              tag ${{ parameters.dbVersion }}
            displayName: "Tag re"
          - script: |
              liquibase \
              --url=$(JDBC_URL) \
              --username=$(WFESP_USERNAME) \
              --password=$(db-wfesp-password) \
              --classpath=src/psql/nodo/liquibase/changelog/wfesp \
              --changeLogFile=db.changelog-master-${{ parameters.dbVersion }}.xml \
              --liquibaseSchemaName=$(WFESP_SCHEMA) \
              --defaultSchemaName=$(WFESP_SCHEMA) \
              --contexts=${{ parameters.k8sEnv }} \
              --log-level=${{ parameters.lbLogLevel }} \
              update -Dschema=$(WFESP_SCHEMA)
            displayName: "Run Liquibase wfesp"
          - script: |
              liquibase \
              --url=$(JDBC_URL) \
              --username=$(WFESP_USERNAME) \
              --password=$(db-wfesp-password) \
              --classpath=src/psql/nodo/liquibase/changelog/wfesp \
              --changeLogFile=db.changelog-master-${{ parameters.dbVersion }}.xml \
              --liquibaseSchemaName=$(WFESP_SCHEMA) \
              --defaultSchemaName=$(WFESP_SCHEMA) \
              --contexts=${{ parameters.k8sEnv }} \
              --log-level=${{ parameters.lbLogLevel }} \
              tag ${{ parameters.dbVersion }}
            displayName: "Tag wfesp"
