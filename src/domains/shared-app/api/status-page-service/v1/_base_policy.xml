<policies>
    <inbound>
      <base />
      <set-variable name="services" value="@{
        return "${services}";
      }" />
      <set-variable name="product" value="@(context.Request.Url.Query.GetValueOrDefault("product", "NONE"))" />
      <trace source="services" severity="information">@((string)context.Variables["services"])</trace>
      <choose>
        <when condition="@(context.Variables["product"] != "NONE")">
          <trace source="product" severity="information">@((string)context.Variables["product"])</trace>
          <set-variable name="baseUrl" value="@{
                      var services = JObject.Parse((string)context.Variables["services"]);
                      return (string)services[context.Variables["product"]];
                  }" />
          <choose>
            <when condition="@(context.Variables["baseUrl"] != null)">
            <set-backend-service base-url="@{
                          var services = JObject.Parse((string)context.Variables["services"]);
                          return "https://" + (string)services[context.Variables["product"]];
            }" />
            </when>
            <otherwise>
              <return-response>
                <set-status code="405" />
                <set-header name="Content-Type" exists-action="override">
                  <value>application/json</value>
                </set-header>
                <set-body>{
                  "statusCode": 405,
                  "message": "The product is incorrect"
                  }</set-body>
              </return-response>
            </otherwise>
          </choose>
        </when>
        <otherwise>
          <return-response>
            <set-status code="405" />
            <set-header name="Content-Type" exists-action="override">
              <value>application/json</value>
            </set-header>
            <set-body>{
              "statusCode": 405,
              "message": "The product is incorrect"
              }</set-body>
          </return-response>
        </otherwise>
      </choose>
    </inbound>
    <outbound>
      <base />
    </outbound>
    <backend>
      <base />
    </backend>
    <on-error>
      <base />
    </on-error>
  </policies>
